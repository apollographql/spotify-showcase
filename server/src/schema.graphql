type Query {
  """
  A list of available genres seed parameter values for
  [recommendations](https://developer.spotify.com/documentation/web-api/reference/#/operations/get-recommendations).
  """
  genres: [String!]!

  """
  Recommendations for the current user.

  Recommendations are generated based on the available information for a given
  seed entity and matched against similar artists and tracks. If there is
  sufficient information about the provided seeds, a list of tracks will be
  returned together with pool size details.

  For artists and tracks that are very new or obscure there might not be enough
  data to generate a list of tracks.
  """
  recommendations(seeds: RecommendationSeedInput!): Recommendations

  """
  Information about the current logged-in user.
  """
  me: CurrentUser

  """
  A playlist owned by a Spotify user.
  """
  playlist(id: ID!): Playlist
}

"""
Spotify catalog information for an artist.
"""
type Artist {
  """
  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)
  for the artist.
  """
  id: ID!

  """
  Known external URLs for this artist.
  """
  externalUrls: [ExternalUrl!]!

  """
  The name of the artist.
  """
  name: String!

  """
  A link to the Web API endpoint providing full details of the artist.
  """
  href: String!

  """
  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)
  for the artist.
  """
  uri: String
}

type CurrentUser {
  """
  Detailed profile information about the current user.
  """
  user: User!

  """
  Playlists owned or followed by the current Spotify user.
  """
  playlists(
    """
    The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.
    """
    limit: Int

    """
    The index of the first playlist to return. Default: 0 (the first object).
    Maximum offset: 100.000.

    Use with `limit` to get the next set of playlists.
    """
    offset: Int
  ): PlaylistConnection
}

type ExternalUrl {
  """
  The [Spotify URL](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)
  for the object.
  """
  spotify: String
}

type Followers {
  "The total number of followers."
  total: Int!
}

type Image {
  """
  The source URL of the image.
  """
  url: String!

  """
  The image height in pixels.
  """
  height: Int

  """
  The image width in pixels.
  """
  width: Int
}

type PageInfo {
  "Whether there is a next page of items."
  hasNextPage: Boolean!

  "Whether there is a previous page of items."
  hasPreviousPage: Boolean!

  """
  The maximum number of items in the response (as set in the query or default)
  """
  limit: Int!

  "The offset of the items returned (as set in the query or default)"
  offset: Int!

  "The total number of items returned for the page."
  total: Int!
}

"Information about a playlist owned by a Spotify user"
type Playlist {
  """
  The [Spotify ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)
  for the playlist.
  """
  id: ID!

  """
  `true` if the owner allows other users to modify the playlist.
  """
  collaborative: Boolean!

  """
  The playlist description. _Only returned for modified, verified playlists,
  otherwise `null`_.
  """
  description: String

  """
  Known external URLs for this playlist.
  """
  externalUrls: ExternalUrl!

  """
  Images for the playlist. The array may be empty or contain up to three images.
  The images are returned by size in descending order.
  See [Working with Playlists](https://developer.spotify.com/documentation/general/guides/working-with-playlists/).
  **Note**: If returned, the source URL for the image (`url`) is temporary and
  will expire in less than a day.
  """
  images: [Image!]

  """
  The name of the playlist.
  """
  name: String!

  """
  The user who owns the playlist.
  """
  owner: User!

  """
  The playlist's public/private status: `true` the playlist is public, `false`
  the playlist is private, `null` the playlist status is not relevant. For more
  about public/private status, see [Working with Playlists](https://developer.spotify.com/documentation/general/guides/working-with-playlists/)
  """
  public: Boolean

  """
  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) */
  for the playlist.
  """
  uri: String!
}

"A paged set of playlists"
type PlaylistConnection {
  "The set of playlists"
  nodes: [Playlist!]!

  "Pagination information for the set of playlists"
  pageInfo: PageInfo!
}

"Information about recommendations for the current user"
type Recommendations {
  """
  An array of recommendation [seed objects](https://developer.spotify.com/documentation/web-api/reference/#object-recommendationseedobject).
  """
  seeds: [RecommendationSeed!]!

  """
  An array of [track object (simplified)](https://developer.spotify.com/documentation/web-api/reference/#object-simplifiedtrackobject)
  ordered according to the parameters supplied.
  """
  tracks: [TrackSimplified!]!
}

"""
Information about a recommendation [seed object](https://developer.spotify.com/documentation/web-api/reference/#object-recommendationseedobject).
"""
type RecommendationSeed {
  """
  The id used to select this seed. This will be the same as the string used in
  the `seedArtists`, `seedTracks` or `seedGenres` parameter.
  """
  id: ID!

  """
  The number of tracks available after min_* and max_* filters have been
  applied.
  """
  afterFilteringSize: Int!

  "The number of tracks available after relinking for regional availability."
  afterRelinkingSize: Int!

  """
  A link to the full track or artist data for this seed. For tracks this will
  be a link to a [Track Object](https://developer.spotify.com/documentation/web-api/reference/#object-trackobject).
  For artists a link to an [Artist Object](https://developer.spotify.com/documentation/web-api/reference/#object-artistobject).
  For genre seeds, this value will be `null`.
  """
  href: String

  "The number of recommended tracks available for this seed."
  initialPoolSize: Int!

  "The entity type of this seed."
  type: RecommendationSeedType!
}

"Available entity types for recommendation seeds."
enum RecommendationSeedType {
  ARTIST
  TRACK
  GENRE
}

"Information about a [track (simplified)](https://developer.spotify.com/documentation/web-api/reference/#object-simplifiedtrackobject) object"
type TrackSimplified {
  id: ID!
  artists: [Artist!]!
  name: String!
}

"Public profile information about a Spotify user."
type User {
  """
  The [Spotify user ID](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for this user.
  """
  id: ID!

  """
  The name displayed on the user's profile. `null` if not available.
  """
  displayName: String

  """
  Known public external URLs for this user.
  """
  externalUrls: ExternalUrl!

  """
  Information about the followers of this user.
  """
  followers: Followers!

  """
  A link to the Web API endpoint for this user.
  """
  href: String!

  "The user's profile image."
  images: [Image!]

  """
  The [Spotify URI](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)
  for this user.
  """
  uri: String!
}

input RecommendationSeedInput {
  """
  A list of [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids) for seed artists. Up to 5 seed values may be provided in any combination of `seedArtists`, `seedTracks` and `seedGenres`.

  Example value: ["4NHQUGzhtTLFvgF5SZesLK"]
  """
  seedArtists: [ID!]

  """
  A list of any genres in the set of available genre seeds. Up to 5 seed values may be provided in any combination of `seedArtists`, `seedTracks` and `seedGenres`.

  Example value: ["classical", "country"]
  """
  seedGenres: [String!]

  """
  A list of [Spotify IDs](https://developer.spotify.com/documentation/web-api/#spotify-uris-and-ids)
  for a seed track. Up to 5 seed values may be provided in any combination of
  `seedArtists`, `seedTracks` and `seedGenres`.

  Example value: ["0c6xIDDpzE81m2q797ordA"]
  """
  seedTracks: [ID!]

  """
  The target size of the list of recommended tracks. For seeds with unusually
  small pools or when highly restrictive filtering is applied, it may be
  impossible to generate the requested number of recommended tracks. Debugging
  information for such cases is available in the response.

  Default value: 20.
  Minimum value: 1.
  Maximum value: 100.
  """
  limit: Int
}
