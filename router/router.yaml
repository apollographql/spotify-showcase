cors:
  allow_any_origin: true
  origins:
    - https://studio.apollographql.com
headers:
  subgraphs:
    spotify:
      request:
        - propagate:
            matching: 'authorization'
        - propagate:
            matching: 'x-graphos-id'
    playback:
      request:
        - propagate:
            matching: 'authorization'
        - propagate:
            matching: 'x-graphos-id'
sandbox:
  enabled: true
supergraph:
  introspection: true
  listen: 0.0.0.0:${env.PORT:-4000}
  query_planning:
    experimental_cache:
      in_memory:
        limit: 512 #This is the default value
homepage:
  enabled: false
include_subgraph_errors:
  all: true
limits:
  max_depth: 20 # Must be 15 or larger to support standard introspection query
  max_height: 200
  max_aliases: 30
  max_root_fields: 20

#####################
# Automatic persisted queries must be disabled to use persised queries with safelisting
#####################
apq:
  enabled: false
#   router:
#     cache:
#       in_memory:
#         limit: 512 # This is the default value
#####################
# Enable to use persisted queries. You must set the env var
#####################
#preview_persisted_queries:
#  enabled: true
#  safelist:
#    enabled: true
#    require_id: false
  # log_unknown: true

#####################
# You must have an enterprise account or enterprise trial to run the Apollo Router locally.
#####################
# # Uncomment 'passthrough' to try Websockets at the /ws route using graphql-ws
# subscription:
#   enabled: true
#   mode:
#     passthrough:
#       all:
#         path: /ws

# # Uncomment 'preview_callback' to try HTTP callback protocal at the /graphql
# # https://www.apollographql.com/docs/router/executing-operations/subscription-callback-protocol
subscription:
  enabled: true
  mode:
    preview_callback:
      public_url: ${env.CALLBACK_URL} # https://spotify-showcase-production-d157.up.railway.app/callback # The router's public URL
      listen: 0.0.0.0:${env.PORT:-4000} # The IP address and port the router will listen on for subscription callbacks
      path: /callback # The path of the router's callback endpoint
      subgraphs: # The list of subgraphs that use the HTTP callback protocol
        - playback
#####################
# Add rhai scripts and query planning for additional logging
#####################
# rhai:
#   scripts: ./rhai
#   main: main.rhai
# plugins:
#   experimental.expose_query_plan: true

#####################
# To run this locally, you can override subgraph urls
#####################
# Running locally with Docker Compose
# override_subgraph_url:
#   playback: http://playback:4002/graphql
#   spotify: http://spotify:4001
# #
# Running subgraphs locally
# override_subgraph_url:
#   playback: http://127.0.0.1:4002/graphql
#   spotify: http://127.0.0.1:4001

#######################
# Uncomment this to enable authorization directives and the dependent coprocessor
#######################

#authorization:
#  preview_directives:
#    enabled: true
#coprocessor:
#  timeout: 5s
#  url: http://coprocessor:4100/
#  router:
#    request:
#      headers: true
#      context: true
